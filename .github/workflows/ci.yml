name: "test-on-pr"

on: [pull_request]

# This workflow will build your tauri app without uploading it anywhere.

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "windows-latest"
            args: ""
          # - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-22.04'
      #   run: |
      #     sudo apt-get update
      #     sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libjavascriptcoregtk-4.0-dev libsoup3.0-dev

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install frontend dependencies
        run: yarn --frozen-lockfile && yarn install # change this to npm, pnpm or bun depending on which one you use.
      
      - name: test
        run: yarn run test

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any assets.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}