name: "test-on-pr"

# on: [pull_request]
on:
  push:
    branches:
      - development # 簡単のため main に変更

# 参考URL: https://blog.lacolaco.net/posts/github-actions-yarn-cache/
env:
  YARN_CACHE_FOLDER: .cache/yarn

# This workflow will build your tauri app without uploading it anywhere.

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.platform }}-${{ matrix.args }}
          workspaces: 'src-tauri -> target'

      - uses: actions/cache@v2
        with:
          path: ${YARN_CACHE_FOLDER}
          key: ${{ runner.os }}-yarn-cache-v1

      - name: install frontend dependencies
        run: yarn --frozen-lockfile && yarn install --network-timeout 600000 --prefer-offline # change this to npm, pnpm or bun depending on which one you use.
      
      - name: test
        run: yarn run test

      - name: lint
        run: yarn run lint
      
      - name: test rust
        working-directory: src-tauri
        run: cargo test

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any assets.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}